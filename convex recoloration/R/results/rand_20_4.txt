Iniciando o processamento do arquivo: rand_20_4.txt 

************* LENDO OS DADOS DE ENTRADA *************
Numero de vertices declarados no cabecalho:  20
Numero de cores declarados no cabecalho: 4
Numero de cores distintas REALMENTE existentes: 4
Cores dos vertices:  3 2 1 1 4 2 1 2 3 3 3 2 4 2 4 2 1 1 4 3 

************* GERANDO DADOS PARA O GUROBI *************
Funcao objetivo: 
 Onde: Vn = Numero do vertice e '_n' = numero da cor

 V1_3 = 0, V1_2 = 1, V1_1 = 1, V1_4 = 1, V2_3 = 1, V2_2 = 0, V2_1 = 1, V2_4 = 1, V3_3 = 1, V3_2 = 1, V3_1 = 0, V3_4 = 1, V4_3 = 1, V4_2 = 1, V4_1 = 0, V4_4 = 1, V5_3 = 1, V5_2 = 1, V5_1 = 1, V5_4 = 0, V6_3 = 1, V6_2 = 0, V6_1 = 1, V6_4 = 1, V7_3 = 1, V7_2 = 1, V7_1 = 0, V7_4 = 1, V8_3 = 1, V8_2 = 0, V8_1 = 1, V8_4 = 1, V9_3 = 0, V9_2 = 1, V9_1 = 1, V9_4 = 1, V10_3 = 0, V10_2 = 1, V10_1 = 1, V10_4 = 1, V11_3 = 0, V11_2 = 1, V11_1 = 1, V11_4 = 1, V12_3 = 1, V12_2 = 0, V12_1 = 1, V12_4 = 1, V13_3 = 1, V13_2 = 1, V13_1 = 1, V13_4 = 0, V14_3 = 1, V14_2 = 0, V14_1 = 1, V14_4 = 1, V15_3 = 1, V15_2 = 1, V15_1 = 1, V15_4 = 0, V16_3 = 1, V16_2 = 0, V16_1 = 1, V16_4 = 1, V17_3 = 1, V17_2 = 1, V17_1 = 0, V17_4 = 1, V18_3 = 1, V18_2 = 1, V18_1 = 0, V18_4 = 1, V19_3 = 1, V19_2 = 1, V19_1 = 1, V19_4 = 0, V20_3 = 0, V20_2 = 1, V20_1 = 1, V20_4 = 1 

Restricao 1 e 2 nao apresentada para deixar arquivos menores. 
 Podem ser consultadas durante execucao do codigo. 
 

************* RESULTADOS OBTIDOS *************
Status do processamento do GUROBI: OPTIMAL
SOLUCAO ENCONTRADA PARA O PROBLEMA - SEQUENCIA DE CORES:
 V1 tem a cor final 1
V2 tem a cor final 1
V3 tem a cor final 1
V4 tem a cor final 1
V5 tem a cor final 1
V6 tem a cor final 1
V7 tem a cor final 1
V8 tem a cor final 3
V9 tem a cor final 3
V10 tem a cor final 3
V11 tem a cor final 3
V12 tem a cor final 2
V13 tem a cor final 2
V14 tem a cor final 2
V15 tem a cor final 4
V16 tem a cor final 4
V17 tem a cor final 4
V18 tem a cor final 4
V19 tem a cor final 4
V20 tem a cor final 4 

RESULTADOS COMPLETOS ENCONTRADOS PELO GUROBI - RELACIONADO A FUNÇÃO OBJETIVO:
 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 

************* DADOS SOBRE O PROCESSAMENTO *************
Tempo, em segundos, decorrido desde a leitura dos dados: 1.222
Quantidade de instancias (itercount): 663 

******** OUTPUT GERADO AUTOMATICAMENTE PELO GUROBI *********

Gurobi Optimizer version 9.0.3 build v9.0.3rc0 (win64)
Optimize a model with 4580 rows, 80 columns and 13760 nonzeros
Model fingerprint: 0xffbd0950
Variable types: 0 continuous, 80 integer (80 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 14.0000000
Presolve time: 0.01s
Presolved: 4580 rows, 80 columns, 13760 nonzeros
Variable types: 0 continuous, 80 integer (80 binary)

Root relaxation: objective 8.333333e+00, 533 iterations, 0.01 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    8.33333    0   41   14.00000    8.33333  40.5%     -    0s
H    0     0                      11.0000000    8.33333  24.2%     -    0s
H    0     0                      10.0000000    8.33333  16.7%     -    0s
     0     0     cutoff    0        10.00000   10.00000  0.00%     -    0s

Cutting planes:
  Gomory: 1
  MIR: 2
  Zero half: 23
  RLT: 9
  BQP: 4

Explored 1 nodes (663 simplex iterations) in 0.18 seconds
Thread count was 4 (of 4 available processors)

Solution count 3: 10 11 14 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+01, best bound 1.000000000000e+01, gap 0.0000%
